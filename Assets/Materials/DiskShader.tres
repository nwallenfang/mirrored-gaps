[gd_resource type="Shader" format=2]

[resource]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.rc6's SpatialMaterial.

shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform sampler2D texture_albedo2;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;
uniform vec2 cursor;
uniform vec2 cursor_normal;
uniform float splash_progress;

uniform vec4 color1: hint_color;
uniform vec4 color2: hint_color;
uniform sampler2D texture_noise;
uniform float noise_speed = 0.33;
uniform vec2 scroll_dir = vec2(0.0, 1.0);
uniform float noise_scale = 3.5;

uniform vec2 offset;
uniform float scale:hint_range(0.5, 1000.0);


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}

vec2 rotate(vec2 uv, vec2 pivot, float angle)
{
	mat2 rotation = mat2(vec2(sin(angle), -cos(angle)),
						vec2(cos(angle), sin(angle)));
	uv -= pivot;
	uv = uv * rotation;
	uv += pivot;
	return uv;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo, base_uv);
	vec4 albedo_tex2 = texture(texture_albedo2, rotate(base_uv, vec2(0.0, 0.0), 45) * 12.0);
//	ALBEDO = mix(color1.rgb, color2.rgb, float(snoise(vec3(noise_scale * UV.x, noise_scale * UV.y, noise_speed * TIME))*115.0 < 0.5));
	ALBEDO = albedo_tex2.rgb;//, vec3(1.0), 0.0 + 0.5 *(0.5 + 0.5*sin(2.5*TIME))); 
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	ALPHA = albedo_tex.r * albedo.a;
}
"
